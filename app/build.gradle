plugins {
    alias(libs.plugins.kotlin.android)
}
apply plugin: libs.plugins.android.application.get().pluginId
apply from: "$rootProject.projectDir/commonSettingsAll.gradle"
apply plugin: libs.plugins.kotlin.serialization.get().pluginId

android {
    namespace commonValues.appBaseNameSpace

    defaultConfig {
        applicationId commonValues.appBaseNameSpace

        ksp {
            arg("room.schemaLocation", "$rootDir/schemas")
            arg("room.incremental", "true")
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            output.outputFileName = "nll-store.apk"
        }


        if (!buildType.debuggable) {
            assembleProvider.get().doLast {
                mappingFileProvider.get().files.forEach { proguardFile ->
                    def newFile = new File("${rootDir}/proguard-mappings/${versionCode}.txt")
                    project.logger.lifecycle("Project app applicationVariants proguardFile from ${proguardFile} to ${newFile.absolutePath}")
                    proguardFile.renameTo(newFile)
                }
            }
        }
    }
}

dependencies {
    implementation(libs.bundles.acraBundle)
    implementation(libs.coil)
    implementation(libs.bundles.ktorBundle)
    implementation(libs.androidx.coreKtx)
    implementation(libs.androidx.appCompat)
    implementation(libs.androidx.activity)
    implementation(libs.bundles.acraBundle)
    implementation(libs.androidx.constraintLayout)
    implementation(libs.androidx.fragment)
    implementation(libs.androidx.recyclerView)
    implementation(libs.google.materialComponents)
    implementation(libs.square.okHttp.loggingInterceptor)
    implementation(libs.androidx.lifecycle.service)
    implementation(libs.androidx.workManagerRuntimeKtx)
    implementation project(":notify")
}
